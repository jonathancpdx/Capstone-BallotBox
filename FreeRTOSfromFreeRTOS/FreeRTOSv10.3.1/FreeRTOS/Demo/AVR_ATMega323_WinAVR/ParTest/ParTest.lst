   1               		.file	"ParTest.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 175               	.global	vParTestInitialise
 177               	vParTestInitialise:
 178               		.stabd	46,0,0
   1:ParTest/ParTest.c **** /*
   2:ParTest/ParTest.c ****  * FreeRTOS Kernel V10.3.1
   3:ParTest/ParTest.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ParTest/ParTest.c ****  *
   5:ParTest/ParTest.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:ParTest/ParTest.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:ParTest/ParTest.c ****  * the Software without restriction, including without limitation the rights to
   8:ParTest/ParTest.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:ParTest/ParTest.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:ParTest/ParTest.c ****  * subject to the following conditions:
  11:ParTest/ParTest.c ****  *
  12:ParTest/ParTest.c ****  * The above copyright notice and this permission notice shall be included in all
  13:ParTest/ParTest.c ****  * copies or substantial portions of the Software.
  14:ParTest/ParTest.c ****  *
  15:ParTest/ParTest.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:ParTest/ParTest.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:ParTest/ParTest.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:ParTest/ParTest.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:ParTest/ParTest.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:ParTest/ParTest.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:ParTest/ParTest.c ****  *
  22:ParTest/ParTest.c ****  * http://www.FreeRTOS.org
  23:ParTest/ParTest.c ****  * http://aws.amazon.com/freertos
  24:ParTest/ParTest.c ****  *
  25:ParTest/ParTest.c ****  * 1 tab == 4 spaces!
  26:ParTest/ParTest.c ****  */
  27:ParTest/ParTest.c **** 
  28:ParTest/ParTest.c **** /* 
  29:ParTest/ParTest.c **** Changes from V2.0.0
  30:ParTest/ParTest.c **** 
  31:ParTest/ParTest.c **** 	+ Use scheduler suspends in place of critical sections.
  32:ParTest/ParTest.c **** 
  33:ParTest/ParTest.c **** Changes from V2.6.0
  34:ParTest/ParTest.c **** 
  35:ParTest/ParTest.c **** 	+ Replaced the inb() and outb() functions with direct memory
  36:ParTest/ParTest.c **** 	  access.  This allows the port to be built with the 20050414 build of
  37:ParTest/ParTest.c **** 	  WinAVR.
  38:ParTest/ParTest.c **** */
  39:ParTest/ParTest.c **** 
  40:ParTest/ParTest.c **** #include "FreeRTOS.h"
  41:ParTest/ParTest.c **** #include "task.h"
  42:ParTest/ParTest.c **** #include "partest.h"
  43:ParTest/ParTest.c **** 
  44:ParTest/ParTest.c **** /*-----------------------------------------------------------
  45:ParTest/ParTest.c ****  * Simple parallel port IO routines.
  46:ParTest/ParTest.c ****  *-----------------------------------------------------------*/
  47:ParTest/ParTest.c **** 
  48:ParTest/ParTest.c **** #define partstALL_BITS_OUTPUT			( ( unsigned char ) 0xff )
  49:ParTest/ParTest.c **** #define partstALL_OUTPUTS_OFF			( ( unsigned char ) 0xff )
  50:ParTest/ParTest.c **** #define partstMAX_OUTPUT_LED			( ( unsigned char ) 7 )
  51:ParTest/ParTest.c **** 
  52:ParTest/ParTest.c **** static volatile unsigned char ucCurrentOutputValue = partstALL_OUTPUTS_OFF; /*lint !e956 File scope
  53:ParTest/ParTest.c **** 
  54:ParTest/ParTest.c **** /*-----------------------------------------------------------*/
  55:ParTest/ParTest.c **** 
  56:ParTest/ParTest.c **** void vParTestInitialise( void )
  57:ParTest/ParTest.c **** {
 180               	.LM0:
 181               	.LFBB1:
 182               	/* prologue: function */
 183               	/* frame size = 0 */
 184               	/* stack size = 0 */
 185               	.L__stack_usage = 0
  58:ParTest/ParTest.c **** 	ucCurrentOutputValue = partstALL_OUTPUTS_OFF;
 187               	.LM1:
 188 0000 8FEF      		ldi r24,lo8(-1)
 189 0002 8093 0000 		sts ucCurrentOutputValue,r24
  59:ParTest/ParTest.c **** 
  60:ParTest/ParTest.c **** 	/* Set port B direction to outputs.  Start with all output off. */
  61:ParTest/ParTest.c **** 	DDRB = partstALL_BITS_OUTPUT;
 191               	.LM2:
 192 0006 87BB      		out 0x17,r24
  62:ParTest/ParTest.c **** 	PORTB = ucCurrentOutputValue;
 194               	.LM3:
 195 0008 8091 0000 		lds r24,ucCurrentOutputValue
 196 000c 88BB      		out 0x18,r24
 197 000e 0895      		ret
 199               	.Lscope1:
 201               		.stabd	78,0,0
 205               	.global	vParTestSetLED
 207               	vParTestSetLED:
 208               		.stabd	46,0,0
  63:ParTest/ParTest.c **** }
  64:ParTest/ParTest.c **** /*-----------------------------------------------------------*/
  65:ParTest/ParTest.c **** 
  66:ParTest/ParTest.c **** void vParTestSetLED( unsigned portBASE_TYPE uxLED, signed portBASE_TYPE xValue )
  67:ParTest/ParTest.c **** {
 210               	.LM4:
 211               	.LFBB2:
 212 0010 1F93      		push r17
 213 0012 CF93      		push r28
 214 0014 DF93      		push r29
 215               	/* prologue: function */
 216               	/* frame size = 0 */
 217               	/* stack size = 3 */
 218               	.L__stack_usage = 3
  68:ParTest/ParTest.c **** unsigned char ucBit = ( unsigned char ) 1;
  69:ParTest/ParTest.c **** 
  70:ParTest/ParTest.c **** 	if( uxLED <= partstMAX_OUTPUT_LED )
 220               	.LM5:
 221 0016 8830      		cpi r24,lo8(8)
 222 0018 00F4      		brsh .L2
 223 001a 162F      		mov r17,r22
  71:ParTest/ParTest.c **** 	{
  72:ParTest/ParTest.c **** 		ucBit <<= uxLED;	
 225               	.LM6:
 226 001c C1E0      		ldi r28,lo8(1)
 227 001e D0E0      		ldi r29,0
 228 0020 00C0      		rjmp 2f
 229               		1:
 230 0022 CC0F      		lsl r28
 231               		2:
 232 0024 8A95      		dec r24
 233 0026 02F4      		brpl 1b
  73:ParTest/ParTest.c **** 
  74:ParTest/ParTest.c **** 		vTaskSuspendAll();
 235               	.LM7:
 236 0028 0E94 0000 		call vTaskSuspendAll
  75:ParTest/ParTest.c **** 		{
  76:ParTest/ParTest.c **** 			if( xValue == pdTRUE )
  77:ParTest/ParTest.c **** 			{
  78:ParTest/ParTest.c **** 				ucBit ^= ( unsigned char ) 0xff;
  79:ParTest/ParTest.c **** 				ucCurrentOutputValue &= ucBit;
 238               	.LM8:
 239 002c 8091 0000 		lds r24,ucCurrentOutputValue
  76:ParTest/ParTest.c **** 			{
 241               	.LM9:
 242 0030 1130      		cpi r17,lo8(1)
 243 0032 01F4      		brne .L4
 245               	.LM10:
 246 0034 C095      		com r28
 247 0036 C823      		and r28,r24
 248 0038 00C0      		rjmp .L6
 249               	.L4:
  80:ParTest/ParTest.c **** 			}
  81:ParTest/ParTest.c **** 			else
  82:ParTest/ParTest.c **** 			{
  83:ParTest/ParTest.c **** 				ucCurrentOutputValue |= ucBit;
 251               	.LM11:
 252 003a C82B      		or r28,r24
 253               	.L6:
 254 003c C093 0000 		sts ucCurrentOutputValue,r28
  84:ParTest/ParTest.c **** 			}
  85:ParTest/ParTest.c **** 
  86:ParTest/ParTest.c **** 			PORTB = ucCurrentOutputValue;
 256               	.LM12:
 257 0040 8091 0000 		lds r24,ucCurrentOutputValue
 258 0044 88BB      		out 0x18,r24
 259               	/* epilogue start */
  87:ParTest/ParTest.c **** 		}
  88:ParTest/ParTest.c **** 		xTaskResumeAll();
  89:ParTest/ParTest.c **** 	}
  90:ParTest/ParTest.c **** }
 261               	.LM13:
 262 0046 DF91      		pop r29
 263 0048 CF91      		pop r28
 264 004a 1F91      		pop r17
  88:ParTest/ParTest.c **** 	}
 266               	.LM14:
 267 004c 0C94 0000 		jmp xTaskResumeAll
 268               	.L2:
 269               	/* epilogue start */
 271               	.LM15:
 272 0050 DF91      		pop r29
 273 0052 CF91      		pop r28
 274 0054 1F91      		pop r17
 275 0056 0895      		ret
 277               	.Lscope2:
 279               		.stabd	78,0,0
 282               	.global	vParTestToggleLED
 284               	vParTestToggleLED:
 285               		.stabd	46,0,0
  91:ParTest/ParTest.c **** /*-----------------------------------------------------------*/
  92:ParTest/ParTest.c **** 
  93:ParTest/ParTest.c **** void vParTestToggleLED( unsigned portBASE_TYPE uxLED )
  94:ParTest/ParTest.c **** {
 287               	.LM16:
 288               	.LFBB3:
 289 0058 CF93      		push r28
 290 005a DF93      		push r29
 291               	/* prologue: function */
 292               	/* frame size = 0 */
 293               	/* stack size = 2 */
 294               	.L__stack_usage = 2
  95:ParTest/ParTest.c **** unsigned char ucBit;
  96:ParTest/ParTest.c **** 
  97:ParTest/ParTest.c **** 	if( uxLED <= partstMAX_OUTPUT_LED )
 296               	.LM17:
 297 005c 8830      		cpi r24,lo8(8)
 298 005e 00F4      		brsh .L8
  98:ParTest/ParTest.c **** 	{
  99:ParTest/ParTest.c **** 		ucBit = ( ( unsigned char ) 1 ) << uxLED;
 300               	.LM18:
 301 0060 C1E0      		ldi r28,lo8(1)
 302 0062 D0E0      		ldi r29,0
 303 0064 00C0      		rjmp 2f
 304               		1:
 305 0066 CC0F      		lsl r28
 306               		2:
 307 0068 8A95      		dec r24
 308 006a 02F4      		brpl 1b
 100:ParTest/ParTest.c **** 
 101:ParTest/ParTest.c **** 		vTaskSuspendAll();
 310               	.LM19:
 311 006c 0E94 0000 		call vTaskSuspendAll
 102:ParTest/ParTest.c **** 		{
 103:ParTest/ParTest.c **** 			if( ucCurrentOutputValue & ucBit )
 313               	.LM20:
 314 0070 8091 0000 		lds r24,ucCurrentOutputValue
 315 0074 8C23      		and r24,r28
 316 0076 01F0      		breq .L10
 104:ParTest/ParTest.c **** 			{
 105:ParTest/ParTest.c **** 				ucCurrentOutputValue &= ~ucBit;
 318               	.LM21:
 319 0078 8091 0000 		lds r24,ucCurrentOutputValue
 320 007c C095      		com r28
 321 007e C823      		and r28,r24
 322 0080 00C0      		rjmp .L12
 323               	.L10:
 106:ParTest/ParTest.c **** 			}
 107:ParTest/ParTest.c **** 			else
 108:ParTest/ParTest.c **** 			{
 109:ParTest/ParTest.c **** 				ucCurrentOutputValue |= ucBit;
 325               	.LM22:
 326 0082 8091 0000 		lds r24,ucCurrentOutputValue
 327 0086 C82B      		or r28,r24
 328               	.L12:
 329 0088 C093 0000 		sts ucCurrentOutputValue,r28
 110:ParTest/ParTest.c **** 			}
 111:ParTest/ParTest.c **** 
 112:ParTest/ParTest.c **** 			PORTB = ucCurrentOutputValue;
 331               	.LM23:
 332 008c 8091 0000 		lds r24,ucCurrentOutputValue
 333 0090 88BB      		out 0x18,r24
 334               	/* epilogue start */
 113:ParTest/ParTest.c **** 		}
 114:ParTest/ParTest.c **** 		xTaskResumeAll();			
 115:ParTest/ParTest.c **** 	}
 116:ParTest/ParTest.c **** }
 336               	.LM24:
 337 0092 DF91      		pop r29
 338 0094 CF91      		pop r28
 114:ParTest/ParTest.c **** 	}
 340               	.LM25:
 341 0096 0C94 0000 		jmp xTaskResumeAll
 342               	.L8:
 343               	/* epilogue start */
 345               	.LM26:
 346 009a DF91      		pop r29
 347 009c CF91      		pop r28
 348 009e 0895      		ret
 350               	.Lscope3:
 352               		.stabd	78,0,0
 353               		.data
 356               	ucCurrentOutputValue:
 357 0000 FF        		.byte	-1
 359               		.text
 361               	.Letext0:
 362               		.ident	"GCC: (GNU) 5.4.0"
 363               	.global __do_copy_data
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ParTest.c
     /tmp/ccZO5yMy.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccZO5yMy.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccZO5yMy.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccZO5yMy.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccZO5yMy.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccZO5yMy.s:177    .text:0000000000000000 vParTestInitialise
     /tmp/ccZO5yMy.s:356    .data:0000000000000000 ucCurrentOutputValue
     /tmp/ccZO5yMy.s:207    .text:0000000000000010 vParTestSetLED
     /tmp/ccZO5yMy.s:284    .text:0000000000000058 vParTestToggleLED

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
__do_copy_data
